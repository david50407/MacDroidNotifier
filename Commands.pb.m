// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Commands.pb.h"

@implementation CommandsRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [CommandsRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface Contact ()
@property (retain) NSString* name;
@property (retain) NSString* number;
@property Contact_Type type;
@property (retain) NSString* otherType;
@end

@implementation Contact

- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasNumber {
  return !!hasNumber_;
}
- (void) setHasNumber:(BOOL) value {
  hasNumber_ = !!value;
}
@synthesize number;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (BOOL) hasOtherType {
  return !!hasOtherType_;
}
- (void) setHasOtherType:(BOOL) value {
  hasOtherType_ = !!value;
}
@synthesize otherType;
- (void) dealloc {
  self.name = nil;
  self.number = nil;
  self.otherType = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.name = @"";
    self.number = @"";
    self.type = Contact_TypeHome;
    self.otherType = @"";
  }
  return self;
}
static Contact* defaultContactInstance = nil;
+ (void) initialize {
  if (self == [Contact class]) {
    defaultContactInstance = [[Contact alloc] init];
  }
}
+ (Contact*) defaultInstance {
  return defaultContactInstance;
}
- (Contact*) defaultInstance {
  return defaultContactInstance;
}
- (BOOL) isInitialized {
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasNumber) {
    return NO;
  }
  if (!self.hasType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasName) {
    [output writeString:1 value:self.name];
  }
  if (self.hasNumber) {
    [output writeString:2 value:self.number];
  }
  if (self.hasType) {
    [output writeEnum:3 value:self.type];
  }
  if (self.hasOtherType) {
    [output writeString:4 value:self.otherType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasName) {
    size += computeStringSize(1, self.name);
  }
  if (self.hasNumber) {
    size += computeStringSize(2, self.number);
  }
  if (self.hasType) {
    size += computeEnumSize(3, self.type);
  }
  if (self.hasOtherType) {
    size += computeStringSize(4, self.otherType);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Contact*) parseFromData:(NSData*) data {
  return (Contact*)[[[Contact builder] mergeFromData:data] build];
}
+ (Contact*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Contact*)[[[Contact builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Contact*) parseFromInputStream:(NSInputStream*) input {
  return (Contact*)[[[Contact builder] mergeFromInputStream:input] build];
}
+ (Contact*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Contact*)[[[Contact builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Contact*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Contact*)[[[Contact builder] mergeFromCodedInputStream:input] build];
}
+ (Contact*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Contact*)[[[Contact builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Contact_Builder*) builder {
  return [[[Contact_Builder alloc] init] autorelease];
}
+ (Contact_Builder*) builderWithPrototype:(Contact*) prototype {
  return [[Contact builder] mergeFrom:prototype];
}
- (Contact_Builder*) builder {
  return [Contact builder];
}
@end

BOOL Contact_TypeIsValidValue(Contact_Type value) {
  switch (value) {
    case Contact_TypeHome:
    case Contact_TypeMobile:
    case Contact_TypeWork:
    case Contact_TypeOther:
      return YES;
    default:
      return NO;
  }
}
@interface Contact_Builder()
@property (retain) Contact* result;
@end

@implementation Contact_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Contact alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Contact_Builder*) clear {
  self.result = [[[Contact alloc] init] autorelease];
  return self;
}
- (Contact_Builder*) clone {
  return [Contact builderWithPrototype:result];
}
- (Contact*) defaultInstance {
  return [Contact defaultInstance];
}
- (Contact*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Contact*) buildPartial {
  Contact* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Contact_Builder*) mergeFrom:(Contact*) other {
  if (other == [Contact defaultInstance]) {
    return self;
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasNumber) {
    [self setNumber:other.number];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasOtherType) {
    [self setOtherType:other.otherType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Contact_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Contact_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setName:[input readString]];
        break;
      }
      case 18: {
        [self setNumber:[input readString]];
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (Contact_TypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 34: {
        [self setOtherType:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (Contact_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (Contact_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasNumber {
  return result.hasNumber;
}
- (NSString*) number {
  return result.number;
}
- (Contact_Builder*) setNumber:(NSString*) value {
  result.hasNumber = YES;
  result.number = value;
  return self;
}
- (Contact_Builder*) clearNumber {
  result.hasNumber = NO;
  result.number = @"";
  return self;
}
- (BOOL) hasType {
  return result.hasType;
}
- (Contact_Type) type {
  return result.type;
}
- (Contact_Builder*) setType:(Contact_Type) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (Contact_Builder*) clearType {
  result.hasType = NO;
  result.type = Contact_TypeHome;
  return self;
}
- (BOOL) hasOtherType {
  return result.hasOtherType;
}
- (NSString*) otherType {
  return result.otherType;
}
- (Contact_Builder*) setOtherType:(NSString*) value {
  result.hasOtherType = YES;
  result.otherType = value;
  return self;
}
- (Contact_Builder*) clearOtherType {
  result.hasOtherType = NO;
  result.otherType = @"";
  return self;
}
@end

@interface DeviceAddresses ()
@property (retain) NSMutableArray* mutableIpAddressList;
@property (retain) NSData* bluetoothMac;
@end

@implementation DeviceAddresses

@synthesize mutableIpAddressList;
- (BOOL) hasBluetoothMac {
  return !!hasBluetoothMac_;
}
- (void) setHasBluetoothMac:(BOOL) value {
  hasBluetoothMac_ = !!value;
}
@synthesize bluetoothMac;
- (void) dealloc {
  self.mutableIpAddressList = nil;
  self.bluetoothMac = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.bluetoothMac = [NSData data];
  }
  return self;
}
static DeviceAddresses* defaultDeviceAddressesInstance = nil;
+ (void) initialize {
  if (self == [DeviceAddresses class]) {
    defaultDeviceAddressesInstance = [[DeviceAddresses alloc] init];
  }
}
+ (DeviceAddresses*) defaultInstance {
  return defaultDeviceAddressesInstance;
}
- (DeviceAddresses*) defaultInstance {
  return defaultDeviceAddressesInstance;
}
- (NSArray*) ipAddressList {
  return mutableIpAddressList;
}
- (NSData*) ipAddressAtIndex:(int32_t) index {
  id value = [mutableIpAddressList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (NSData* element in self.mutableIpAddressList) {
    [output writeData:1 value:element];
  }
  if (self.hasBluetoothMac) {
    [output writeData:2 value:self.bluetoothMac];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  {
    int32_t dataSize = 0;
    for (NSData* element in self.mutableIpAddressList) {
      dataSize += computeDataSizeNoTag(element);
    }
    size += dataSize;
    size += 1 * self.mutableIpAddressList.count;
  }
  if (self.hasBluetoothMac) {
    size += computeDataSize(2, self.bluetoothMac);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (DeviceAddresses*) parseFromData:(NSData*) data {
  return (DeviceAddresses*)[[[DeviceAddresses builder] mergeFromData:data] build];
}
+ (DeviceAddresses*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DeviceAddresses*)[[[DeviceAddresses builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (DeviceAddresses*) parseFromInputStream:(NSInputStream*) input {
  return (DeviceAddresses*)[[[DeviceAddresses builder] mergeFromInputStream:input] build];
}
+ (DeviceAddresses*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DeviceAddresses*)[[[DeviceAddresses builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DeviceAddresses*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (DeviceAddresses*)[[[DeviceAddresses builder] mergeFromCodedInputStream:input] build];
}
+ (DeviceAddresses*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DeviceAddresses*)[[[DeviceAddresses builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DeviceAddresses_Builder*) builder {
  return [[[DeviceAddresses_Builder alloc] init] autorelease];
}
+ (DeviceAddresses_Builder*) builderWithPrototype:(DeviceAddresses*) prototype {
  return [[DeviceAddresses builder] mergeFrom:prototype];
}
- (DeviceAddresses_Builder*) builder {
  return [DeviceAddresses builder];
}
@end

@interface DeviceAddresses_Builder()
@property (retain) DeviceAddresses* result;
@end

@implementation DeviceAddresses_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[DeviceAddresses alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (DeviceAddresses_Builder*) clear {
  self.result = [[[DeviceAddresses alloc] init] autorelease];
  return self;
}
- (DeviceAddresses_Builder*) clone {
  return [DeviceAddresses builderWithPrototype:result];
}
- (DeviceAddresses*) defaultInstance {
  return [DeviceAddresses defaultInstance];
}
- (DeviceAddresses*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (DeviceAddresses*) buildPartial {
  DeviceAddresses* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (DeviceAddresses_Builder*) mergeFrom:(DeviceAddresses*) other {
  if (other == [DeviceAddresses defaultInstance]) {
    return self;
  }
  if (other.mutableIpAddressList.count > 0) {
    if (result.mutableIpAddressList == nil) {
      result.mutableIpAddressList = [NSMutableArray array];
    }
    [result.mutableIpAddressList addObjectsFromArray:other.mutableIpAddressList];
  }
  if (other.hasBluetoothMac) {
    [self setBluetoothMac:other.bluetoothMac];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (DeviceAddresses_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (DeviceAddresses_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self addIpAddress:[input readData]];
        break;
      }
      case 18: {
        [self setBluetoothMac:[input readData]];
        break;
      }
    }
  }
}
- (NSArray*) ipAddressList {
  if (result.mutableIpAddressList == nil) {
    return [NSArray array];
  }
  return result.mutableIpAddressList;
}
- (NSData*) ipAddressAtIndex:(int32_t) index {
  return [result ipAddressAtIndex:index];
}
- (DeviceAddresses_Builder*) replaceIpAddressAtIndex:(int32_t) index with:(NSData*) value {
  [result.mutableIpAddressList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (DeviceAddresses_Builder*) addIpAddress:(NSData*) value {
  if (result.mutableIpAddressList == nil) {
    result.mutableIpAddressList = [NSMutableArray array];
  }
  [result.mutableIpAddressList addObject:value];
  return self;
}
- (DeviceAddresses_Builder*) addAllIpAddress:(NSArray*) values {
  if (result.mutableIpAddressList == nil) {
    result.mutableIpAddressList = [NSMutableArray array];
  }
  [result.mutableIpAddressList addObjectsFromArray:values];
  return self;
}
- (DeviceAddresses_Builder*) clearIpAddressList {
  result.mutableIpAddressList = nil;
  return self;
}
- (BOOL) hasBluetoothMac {
  return result.hasBluetoothMac;
}
- (NSData*) bluetoothMac {
  return result.bluetoothMac;
}
- (DeviceAddresses_Builder*) setBluetoothMac:(NSData*) value {
  result.hasBluetoothMac = YES;
  result.bluetoothMac = value;
  return self;
}
- (DeviceAddresses_Builder*) clearBluetoothMac {
  result.hasBluetoothMac = NO;
  result.bluetoothMac = [NSData data];
  return self;
}
@end

@interface CommandRequest ()
@property int64_t deviceId;
@property int64_t commandId;
@property CommandRequest_CommandType commandType;
@property (retain) CommandRequest_CallOptions* callOptions;
@property (retain) CommandRequest_SmsOptions* smsOptions;
@property (retain) CommandRequest_QueryOptions* queryOptions;
@end

@implementation CommandRequest

- (BOOL) hasDeviceId {
  return !!hasDeviceId_;
}
- (void) setHasDeviceId:(BOOL) value {
  hasDeviceId_ = !!value;
}
@synthesize deviceId;
- (BOOL) hasCommandId {
  return !!hasCommandId_;
}
- (void) setHasCommandId:(BOOL) value {
  hasCommandId_ = !!value;
}
@synthesize commandId;
- (BOOL) hasCommandType {
  return !!hasCommandType_;
}
- (void) setHasCommandType:(BOOL) value {
  hasCommandType_ = !!value;
}
@synthesize commandType;
- (BOOL) hasCallOptions {
  return !!hasCallOptions_;
}
- (void) setHasCallOptions:(BOOL) value {
  hasCallOptions_ = !!value;
}
@synthesize callOptions;
- (BOOL) hasSmsOptions {
  return !!hasSmsOptions_;
}
- (void) setHasSmsOptions:(BOOL) value {
  hasSmsOptions_ = !!value;
}
@synthesize smsOptions;
- (BOOL) hasQueryOptions {
  return !!hasQueryOptions_;
}
- (void) setHasQueryOptions:(BOOL) value {
  hasQueryOptions_ = !!value;
}
@synthesize queryOptions;
- (void) dealloc {
  self.callOptions = nil;
  self.smsOptions = nil;
  self.queryOptions = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.deviceId = 0L;
    self.commandId = 0L;
    self.commandType = CommandRequest_CommandTypeCall;
    self.callOptions = [CommandRequest_CallOptions defaultInstance];
    self.smsOptions = [CommandRequest_SmsOptions defaultInstance];
    self.queryOptions = [CommandRequest_QueryOptions defaultInstance];
  }
  return self;
}
static CommandRequest* defaultCommandRequestInstance = nil;
+ (void) initialize {
  if (self == [CommandRequest class]) {
    defaultCommandRequestInstance = [[CommandRequest alloc] init];
  }
}
+ (CommandRequest*) defaultInstance {
  return defaultCommandRequestInstance;
}
- (CommandRequest*) defaultInstance {
  return defaultCommandRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasDeviceId) {
    return NO;
  }
  if (!self.hasCommandId) {
    return NO;
  }
  if (!self.hasCommandType) {
    return NO;
  }
  if (self.hasCallOptions) {
    if (!self.callOptions.isInitialized) {
      return NO;
    }
  }
  if (self.hasSmsOptions) {
    if (!self.smsOptions.isInitialized) {
      return NO;
    }
  }
  if (self.hasQueryOptions) {
    if (!self.queryOptions.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDeviceId) {
    [output writeFixed64:1 value:self.deviceId];
  }
  if (self.hasCommandId) {
    [output writeFixed64:2 value:self.commandId];
  }
  if (self.hasCommandType) {
    [output writeEnum:3 value:self.commandType];
  }
  if (self.hasCallOptions) {
    [output writeMessage:10 value:self.callOptions];
  }
  if (self.hasSmsOptions) {
    [output writeMessage:11 value:self.smsOptions];
  }
  if (self.hasQueryOptions) {
    [output writeMessage:12 value:self.queryOptions];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasDeviceId) {
    size += computeFixed64Size(1, self.deviceId);
  }
  if (self.hasCommandId) {
    size += computeFixed64Size(2, self.commandId);
  }
  if (self.hasCommandType) {
    size += computeEnumSize(3, self.commandType);
  }
  if (self.hasCallOptions) {
    size += computeMessageSize(10, self.callOptions);
  }
  if (self.hasSmsOptions) {
    size += computeMessageSize(11, self.smsOptions);
  }
  if (self.hasQueryOptions) {
    size += computeMessageSize(12, self.queryOptions);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CommandRequest*) parseFromData:(NSData*) data {
  return (CommandRequest*)[[[CommandRequest builder] mergeFromData:data] build];
}
+ (CommandRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommandRequest*)[[[CommandRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CommandRequest*) parseFromInputStream:(NSInputStream*) input {
  return (CommandRequest*)[[[CommandRequest builder] mergeFromInputStream:input] build];
}
+ (CommandRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommandRequest*)[[[CommandRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CommandRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CommandRequest*)[[[CommandRequest builder] mergeFromCodedInputStream:input] build];
}
+ (CommandRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommandRequest*)[[[CommandRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CommandRequest_Builder*) builder {
  return [[[CommandRequest_Builder alloc] init] autorelease];
}
+ (CommandRequest_Builder*) builderWithPrototype:(CommandRequest*) prototype {
  return [[CommandRequest builder] mergeFrom:prototype];
}
- (CommandRequest_Builder*) builder {
  return [CommandRequest builder];
}
@end

BOOL CommandRequest_CommandTypeIsValidValue(CommandRequest_CommandType value) {
  switch (value) {
    case CommandRequest_CommandTypeCall:
    case CommandRequest_CommandTypeAnswer:
    case CommandRequest_CommandTypeHangUp:
    case CommandRequest_CommandTypeSendSms:
    case CommandRequest_CommandTypeSendMms:
    case CommandRequest_CommandTypeQuery:
    case CommandRequest_CommandTypeDiscover:
      return YES;
    default:
      return NO;
  }
}
@interface CommandRequest_CallOptions ()
@property (retain) NSString* phoneNumber;
@end

@implementation CommandRequest_CallOptions

- (BOOL) hasPhoneNumber {
  return !!hasPhoneNumber_;
}
- (void) setHasPhoneNumber:(BOOL) value {
  hasPhoneNumber_ = !!value;
}
@synthesize phoneNumber;
- (void) dealloc {
  self.phoneNumber = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.phoneNumber = @"";
  }
  return self;
}
static CommandRequest_CallOptions* defaultCommandRequest_CallOptionsInstance = nil;
+ (void) initialize {
  if (self == [CommandRequest_CallOptions class]) {
    defaultCommandRequest_CallOptionsInstance = [[CommandRequest_CallOptions alloc] init];
  }
}
+ (CommandRequest_CallOptions*) defaultInstance {
  return defaultCommandRequest_CallOptionsInstance;
}
- (CommandRequest_CallOptions*) defaultInstance {
  return defaultCommandRequest_CallOptionsInstance;
}
- (BOOL) isInitialized {
  if (!self.hasPhoneNumber) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPhoneNumber) {
    [output writeString:1 value:self.phoneNumber];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasPhoneNumber) {
    size += computeStringSize(1, self.phoneNumber);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CommandRequest_CallOptions*) parseFromData:(NSData*) data {
  return (CommandRequest_CallOptions*)[[[CommandRequest_CallOptions builder] mergeFromData:data] build];
}
+ (CommandRequest_CallOptions*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommandRequest_CallOptions*)[[[CommandRequest_CallOptions builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CommandRequest_CallOptions*) parseFromInputStream:(NSInputStream*) input {
  return (CommandRequest_CallOptions*)[[[CommandRequest_CallOptions builder] mergeFromInputStream:input] build];
}
+ (CommandRequest_CallOptions*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommandRequest_CallOptions*)[[[CommandRequest_CallOptions builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CommandRequest_CallOptions*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CommandRequest_CallOptions*)[[[CommandRequest_CallOptions builder] mergeFromCodedInputStream:input] build];
}
+ (CommandRequest_CallOptions*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommandRequest_CallOptions*)[[[CommandRequest_CallOptions builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CommandRequest_CallOptions_Builder*) builder {
  return [[[CommandRequest_CallOptions_Builder alloc] init] autorelease];
}
+ (CommandRequest_CallOptions_Builder*) builderWithPrototype:(CommandRequest_CallOptions*) prototype {
  return [[CommandRequest_CallOptions builder] mergeFrom:prototype];
}
- (CommandRequest_CallOptions_Builder*) builder {
  return [CommandRequest_CallOptions builder];
}
@end

@interface CommandRequest_CallOptions_Builder()
@property (retain) CommandRequest_CallOptions* result;
@end

@implementation CommandRequest_CallOptions_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CommandRequest_CallOptions alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CommandRequest_CallOptions_Builder*) clear {
  self.result = [[[CommandRequest_CallOptions alloc] init] autorelease];
  return self;
}
- (CommandRequest_CallOptions_Builder*) clone {
  return [CommandRequest_CallOptions builderWithPrototype:result];
}
- (CommandRequest_CallOptions*) defaultInstance {
  return [CommandRequest_CallOptions defaultInstance];
}
- (CommandRequest_CallOptions*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CommandRequest_CallOptions*) buildPartial {
  CommandRequest_CallOptions* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CommandRequest_CallOptions_Builder*) mergeFrom:(CommandRequest_CallOptions*) other {
  if (other == [CommandRequest_CallOptions defaultInstance]) {
    return self;
  }
  if (other.hasPhoneNumber) {
    [self setPhoneNumber:other.phoneNumber];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CommandRequest_CallOptions_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CommandRequest_CallOptions_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPhoneNumber:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasPhoneNumber {
  return result.hasPhoneNumber;
}
- (NSString*) phoneNumber {
  return result.phoneNumber;
}
- (CommandRequest_CallOptions_Builder*) setPhoneNumber:(NSString*) value {
  result.hasPhoneNumber = YES;
  result.phoneNumber = value;
  return self;
}
- (CommandRequest_CallOptions_Builder*) clearPhoneNumber {
  result.hasPhoneNumber = NO;
  result.phoneNumber = @"";
  return self;
}
@end

@interface CommandRequest_SmsOptions ()
@property (retain) NSString* phoneNumber;
@property (retain) NSString* smsMessage;
@end

@implementation CommandRequest_SmsOptions

- (BOOL) hasPhoneNumber {
  return !!hasPhoneNumber_;
}
- (void) setHasPhoneNumber:(BOOL) value {
  hasPhoneNumber_ = !!value;
}
@synthesize phoneNumber;
- (BOOL) hasSmsMessage {
  return !!hasSmsMessage_;
}
- (void) setHasSmsMessage:(BOOL) value {
  hasSmsMessage_ = !!value;
}
@synthesize smsMessage;
- (void) dealloc {
  self.phoneNumber = nil;
  self.smsMessage = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.phoneNumber = @"";
    self.smsMessage = @"";
  }
  return self;
}
static CommandRequest_SmsOptions* defaultCommandRequest_SmsOptionsInstance = nil;
+ (void) initialize {
  if (self == [CommandRequest_SmsOptions class]) {
    defaultCommandRequest_SmsOptionsInstance = [[CommandRequest_SmsOptions alloc] init];
  }
}
+ (CommandRequest_SmsOptions*) defaultInstance {
  return defaultCommandRequest_SmsOptionsInstance;
}
- (CommandRequest_SmsOptions*) defaultInstance {
  return defaultCommandRequest_SmsOptionsInstance;
}
- (BOOL) isInitialized {
  if (!self.hasPhoneNumber) {
    return NO;
  }
  if (!self.hasSmsMessage) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPhoneNumber) {
    [output writeString:1 value:self.phoneNumber];
  }
  if (self.hasSmsMessage) {
    [output writeString:2 value:self.smsMessage];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasPhoneNumber) {
    size += computeStringSize(1, self.phoneNumber);
  }
  if (self.hasSmsMessage) {
    size += computeStringSize(2, self.smsMessage);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CommandRequest_SmsOptions*) parseFromData:(NSData*) data {
  return (CommandRequest_SmsOptions*)[[[CommandRequest_SmsOptions builder] mergeFromData:data] build];
}
+ (CommandRequest_SmsOptions*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommandRequest_SmsOptions*)[[[CommandRequest_SmsOptions builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CommandRequest_SmsOptions*) parseFromInputStream:(NSInputStream*) input {
  return (CommandRequest_SmsOptions*)[[[CommandRequest_SmsOptions builder] mergeFromInputStream:input] build];
}
+ (CommandRequest_SmsOptions*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommandRequest_SmsOptions*)[[[CommandRequest_SmsOptions builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CommandRequest_SmsOptions*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CommandRequest_SmsOptions*)[[[CommandRequest_SmsOptions builder] mergeFromCodedInputStream:input] build];
}
+ (CommandRequest_SmsOptions*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommandRequest_SmsOptions*)[[[CommandRequest_SmsOptions builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CommandRequest_SmsOptions_Builder*) builder {
  return [[[CommandRequest_SmsOptions_Builder alloc] init] autorelease];
}
+ (CommandRequest_SmsOptions_Builder*) builderWithPrototype:(CommandRequest_SmsOptions*) prototype {
  return [[CommandRequest_SmsOptions builder] mergeFrom:prototype];
}
- (CommandRequest_SmsOptions_Builder*) builder {
  return [CommandRequest_SmsOptions builder];
}
@end

@interface CommandRequest_SmsOptions_Builder()
@property (retain) CommandRequest_SmsOptions* result;
@end

@implementation CommandRequest_SmsOptions_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CommandRequest_SmsOptions alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CommandRequest_SmsOptions_Builder*) clear {
  self.result = [[[CommandRequest_SmsOptions alloc] init] autorelease];
  return self;
}
- (CommandRequest_SmsOptions_Builder*) clone {
  return [CommandRequest_SmsOptions builderWithPrototype:result];
}
- (CommandRequest_SmsOptions*) defaultInstance {
  return [CommandRequest_SmsOptions defaultInstance];
}
- (CommandRequest_SmsOptions*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CommandRequest_SmsOptions*) buildPartial {
  CommandRequest_SmsOptions* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CommandRequest_SmsOptions_Builder*) mergeFrom:(CommandRequest_SmsOptions*) other {
  if (other == [CommandRequest_SmsOptions defaultInstance]) {
    return self;
  }
  if (other.hasPhoneNumber) {
    [self setPhoneNumber:other.phoneNumber];
  }
  if (other.hasSmsMessage) {
    [self setSmsMessage:other.smsMessage];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CommandRequest_SmsOptions_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CommandRequest_SmsOptions_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPhoneNumber:[input readString]];
        break;
      }
      case 18: {
        [self setSmsMessage:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasPhoneNumber {
  return result.hasPhoneNumber;
}
- (NSString*) phoneNumber {
  return result.phoneNumber;
}
- (CommandRequest_SmsOptions_Builder*) setPhoneNumber:(NSString*) value {
  result.hasPhoneNumber = YES;
  result.phoneNumber = value;
  return self;
}
- (CommandRequest_SmsOptions_Builder*) clearPhoneNumber {
  result.hasPhoneNumber = NO;
  result.phoneNumber = @"";
  return self;
}
- (BOOL) hasSmsMessage {
  return result.hasSmsMessage;
}
- (NSString*) smsMessage {
  return result.smsMessage;
}
- (CommandRequest_SmsOptions_Builder*) setSmsMessage:(NSString*) value {
  result.hasSmsMessage = YES;
  result.smsMessage = value;
  return self;
}
- (CommandRequest_SmsOptions_Builder*) clearSmsMessage {
  result.hasSmsMessage = NO;
  result.smsMessage = @"";
  return self;
}
@end

@interface CommandRequest_QueryOptions ()
@property (retain) NSString* query;
@end

@implementation CommandRequest_QueryOptions

- (BOOL) hasQuery {
  return !!hasQuery_;
}
- (void) setHasQuery:(BOOL) value {
  hasQuery_ = !!value;
}
@synthesize query;
- (void) dealloc {
  self.query = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.query = @"";
  }
  return self;
}
static CommandRequest_QueryOptions* defaultCommandRequest_QueryOptionsInstance = nil;
+ (void) initialize {
  if (self == [CommandRequest_QueryOptions class]) {
    defaultCommandRequest_QueryOptionsInstance = [[CommandRequest_QueryOptions alloc] init];
  }
}
+ (CommandRequest_QueryOptions*) defaultInstance {
  return defaultCommandRequest_QueryOptionsInstance;
}
- (CommandRequest_QueryOptions*) defaultInstance {
  return defaultCommandRequest_QueryOptionsInstance;
}
- (BOOL) isInitialized {
  if (!self.hasQuery) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasQuery) {
    [output writeString:1 value:self.query];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasQuery) {
    size += computeStringSize(1, self.query);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CommandRequest_QueryOptions*) parseFromData:(NSData*) data {
  return (CommandRequest_QueryOptions*)[[[CommandRequest_QueryOptions builder] mergeFromData:data] build];
}
+ (CommandRequest_QueryOptions*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommandRequest_QueryOptions*)[[[CommandRequest_QueryOptions builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CommandRequest_QueryOptions*) parseFromInputStream:(NSInputStream*) input {
  return (CommandRequest_QueryOptions*)[[[CommandRequest_QueryOptions builder] mergeFromInputStream:input] build];
}
+ (CommandRequest_QueryOptions*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommandRequest_QueryOptions*)[[[CommandRequest_QueryOptions builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CommandRequest_QueryOptions*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CommandRequest_QueryOptions*)[[[CommandRequest_QueryOptions builder] mergeFromCodedInputStream:input] build];
}
+ (CommandRequest_QueryOptions*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommandRequest_QueryOptions*)[[[CommandRequest_QueryOptions builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CommandRequest_QueryOptions_Builder*) builder {
  return [[[CommandRequest_QueryOptions_Builder alloc] init] autorelease];
}
+ (CommandRequest_QueryOptions_Builder*) builderWithPrototype:(CommandRequest_QueryOptions*) prototype {
  return [[CommandRequest_QueryOptions builder] mergeFrom:prototype];
}
- (CommandRequest_QueryOptions_Builder*) builder {
  return [CommandRequest_QueryOptions builder];
}
@end

@interface CommandRequest_QueryOptions_Builder()
@property (retain) CommandRequest_QueryOptions* result;
@end

@implementation CommandRequest_QueryOptions_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CommandRequest_QueryOptions alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CommandRequest_QueryOptions_Builder*) clear {
  self.result = [[[CommandRequest_QueryOptions alloc] init] autorelease];
  return self;
}
- (CommandRequest_QueryOptions_Builder*) clone {
  return [CommandRequest_QueryOptions builderWithPrototype:result];
}
- (CommandRequest_QueryOptions*) defaultInstance {
  return [CommandRequest_QueryOptions defaultInstance];
}
- (CommandRequest_QueryOptions*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CommandRequest_QueryOptions*) buildPartial {
  CommandRequest_QueryOptions* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CommandRequest_QueryOptions_Builder*) mergeFrom:(CommandRequest_QueryOptions*) other {
  if (other == [CommandRequest_QueryOptions defaultInstance]) {
    return self;
  }
  if (other.hasQuery) {
    [self setQuery:other.query];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CommandRequest_QueryOptions_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CommandRequest_QueryOptions_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setQuery:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasQuery {
  return result.hasQuery;
}
- (NSString*) query {
  return result.query;
}
- (CommandRequest_QueryOptions_Builder*) setQuery:(NSString*) value {
  result.hasQuery = YES;
  result.query = value;
  return self;
}
- (CommandRequest_QueryOptions_Builder*) clearQuery {
  result.hasQuery = NO;
  result.query = @"";
  return self;
}
@end

@interface CommandRequest_Builder()
@property (retain) CommandRequest* result;
@end

@implementation CommandRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CommandRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CommandRequest_Builder*) clear {
  self.result = [[[CommandRequest alloc] init] autorelease];
  return self;
}
- (CommandRequest_Builder*) clone {
  return [CommandRequest builderWithPrototype:result];
}
- (CommandRequest*) defaultInstance {
  return [CommandRequest defaultInstance];
}
- (CommandRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CommandRequest*) buildPartial {
  CommandRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CommandRequest_Builder*) mergeFrom:(CommandRequest*) other {
  if (other == [CommandRequest defaultInstance]) {
    return self;
  }
  if (other.hasDeviceId) {
    [self setDeviceId:other.deviceId];
  }
  if (other.hasCommandId) {
    [self setCommandId:other.commandId];
  }
  if (other.hasCommandType) {
    [self setCommandType:other.commandType];
  }
  if (other.hasCallOptions) {
    [self mergeCallOptions:other.callOptions];
  }
  if (other.hasSmsOptions) {
    [self mergeSmsOptions:other.smsOptions];
  }
  if (other.hasQueryOptions) {
    [self mergeQueryOptions:other.queryOptions];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CommandRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CommandRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 9: {
        [self setDeviceId:[input readFixed64]];
        break;
      }
      case 17: {
        [self setCommandId:[input readFixed64]];
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (CommandRequest_CommandTypeIsValidValue(value)) {
          [self setCommandType:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 82: {
        CommandRequest_CallOptions_Builder* subBuilder = [CommandRequest_CallOptions builder];
        if (self.hasCallOptions) {
          [subBuilder mergeFrom:self.callOptions];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCallOptions:[subBuilder buildPartial]];
        break;
      }
      case 90: {
        CommandRequest_SmsOptions_Builder* subBuilder = [CommandRequest_SmsOptions builder];
        if (self.hasSmsOptions) {
          [subBuilder mergeFrom:self.smsOptions];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSmsOptions:[subBuilder buildPartial]];
        break;
      }
      case 98: {
        CommandRequest_QueryOptions_Builder* subBuilder = [CommandRequest_QueryOptions builder];
        if (self.hasQueryOptions) {
          [subBuilder mergeFrom:self.queryOptions];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setQueryOptions:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasDeviceId {
  return result.hasDeviceId;
}
- (int64_t) deviceId {
  return result.deviceId;
}
- (CommandRequest_Builder*) setDeviceId:(int64_t) value {
  result.hasDeviceId = YES;
  result.deviceId = value;
  return self;
}
- (CommandRequest_Builder*) clearDeviceId {
  result.hasDeviceId = NO;
  result.deviceId = 0L;
  return self;
}
- (BOOL) hasCommandId {
  return result.hasCommandId;
}
- (int64_t) commandId {
  return result.commandId;
}
- (CommandRequest_Builder*) setCommandId:(int64_t) value {
  result.hasCommandId = YES;
  result.commandId = value;
  return self;
}
- (CommandRequest_Builder*) clearCommandId {
  result.hasCommandId = NO;
  result.commandId = 0L;
  return self;
}
- (BOOL) hasCommandType {
  return result.hasCommandType;
}
- (CommandRequest_CommandType) commandType {
  return result.commandType;
}
- (CommandRequest_Builder*) setCommandType:(CommandRequest_CommandType) value {
  result.hasCommandType = YES;
  result.commandType = value;
  return self;
}
- (CommandRequest_Builder*) clearCommandType {
  result.hasCommandType = NO;
  result.commandType = CommandRequest_CommandTypeCall;
  return self;
}
- (BOOL) hasCallOptions {
  return result.hasCallOptions;
}
- (CommandRequest_CallOptions*) callOptions {
  return result.callOptions;
}
- (CommandRequest_Builder*) setCallOptions:(CommandRequest_CallOptions*) value {
  result.hasCallOptions = YES;
  result.callOptions = value;
  return self;
}
- (CommandRequest_Builder*) setCallOptionsBuilder:(CommandRequest_CallOptions_Builder*) builderForValue {
  return [self setCallOptions:[builderForValue build]];
}
- (CommandRequest_Builder*) mergeCallOptions:(CommandRequest_CallOptions*) value {
  if (result.hasCallOptions &&
      result.callOptions != [CommandRequest_CallOptions defaultInstance]) {
    result.callOptions =
      [[[CommandRequest_CallOptions builderWithPrototype:result.callOptions] mergeFrom:value] buildPartial];
  } else {
    result.callOptions = value;
  }
  result.hasCallOptions = YES;
  return self;
}
- (CommandRequest_Builder*) clearCallOptions {
  result.hasCallOptions = NO;
  result.callOptions = [CommandRequest_CallOptions defaultInstance];
  return self;
}
- (BOOL) hasSmsOptions {
  return result.hasSmsOptions;
}
- (CommandRequest_SmsOptions*) smsOptions {
  return result.smsOptions;
}
- (CommandRequest_Builder*) setSmsOptions:(CommandRequest_SmsOptions*) value {
  result.hasSmsOptions = YES;
  result.smsOptions = value;
  return self;
}
- (CommandRequest_Builder*) setSmsOptionsBuilder:(CommandRequest_SmsOptions_Builder*) builderForValue {
  return [self setSmsOptions:[builderForValue build]];
}
- (CommandRequest_Builder*) mergeSmsOptions:(CommandRequest_SmsOptions*) value {
  if (result.hasSmsOptions &&
      result.smsOptions != [CommandRequest_SmsOptions defaultInstance]) {
    result.smsOptions =
      [[[CommandRequest_SmsOptions builderWithPrototype:result.smsOptions] mergeFrom:value] buildPartial];
  } else {
    result.smsOptions = value;
  }
  result.hasSmsOptions = YES;
  return self;
}
- (CommandRequest_Builder*) clearSmsOptions {
  result.hasSmsOptions = NO;
  result.smsOptions = [CommandRequest_SmsOptions defaultInstance];
  return self;
}
- (BOOL) hasQueryOptions {
  return result.hasQueryOptions;
}
- (CommandRequest_QueryOptions*) queryOptions {
  return result.queryOptions;
}
- (CommandRequest_Builder*) setQueryOptions:(CommandRequest_QueryOptions*) value {
  result.hasQueryOptions = YES;
  result.queryOptions = value;
  return self;
}
- (CommandRequest_Builder*) setQueryOptionsBuilder:(CommandRequest_QueryOptions_Builder*) builderForValue {
  return [self setQueryOptions:[builderForValue build]];
}
- (CommandRequest_Builder*) mergeQueryOptions:(CommandRequest_QueryOptions*) value {
  if (result.hasQueryOptions &&
      result.queryOptions != [CommandRequest_QueryOptions defaultInstance]) {
    result.queryOptions =
      [[[CommandRequest_QueryOptions builderWithPrototype:result.queryOptions] mergeFrom:value] buildPartial];
  } else {
    result.queryOptions = value;
  }
  result.hasQueryOptions = YES;
  return self;
}
- (CommandRequest_Builder*) clearQueryOptions {
  result.hasQueryOptions = NO;
  result.queryOptions = [CommandRequest_QueryOptions defaultInstance];
  return self;
}
@end

@interface CommandResponse ()
@property int64_t deviceId;
@property int64_t commandId;
@property BOOL success;
@property (retain) NSString* errorMessage;
@property (retain) CommandResponse_SearchResults* searchResults;
@property (retain) DeviceAddresses* discoveryResult;
@end

@implementation CommandResponse

- (BOOL) hasDeviceId {
  return !!hasDeviceId_;
}
- (void) setHasDeviceId:(BOOL) value {
  hasDeviceId_ = !!value;
}
@synthesize deviceId;
- (BOOL) hasCommandId {
  return !!hasCommandId_;
}
- (void) setHasCommandId:(BOOL) value {
  hasCommandId_ = !!value;
}
@synthesize commandId;
- (BOOL) hasSuccess {
  return !!hasSuccess_;
}
- (void) setHasSuccess:(BOOL) value {
  hasSuccess_ = !!value;
}
- (BOOL) success {
  return !!success_;
}
- (void) setSuccess:(BOOL) value {
  success_ = !!value;
}
- (BOOL) hasErrorMessage {
  return !!hasErrorMessage_;
}
- (void) setHasErrorMessage:(BOOL) value {
  hasErrorMessage_ = !!value;
}
@synthesize errorMessage;
- (BOOL) hasSearchResults {
  return !!hasSearchResults_;
}
- (void) setHasSearchResults:(BOOL) value {
  hasSearchResults_ = !!value;
}
@synthesize searchResults;
- (BOOL) hasDiscoveryResult {
  return !!hasDiscoveryResult_;
}
- (void) setHasDiscoveryResult:(BOOL) value {
  hasDiscoveryResult_ = !!value;
}
@synthesize discoveryResult;
- (void) dealloc {
  self.errorMessage = nil;
  self.searchResults = nil;
  self.discoveryResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.deviceId = 0L;
    self.commandId = 0L;
    self.success = NO;
    self.errorMessage = @"";
    self.searchResults = [CommandResponse_SearchResults defaultInstance];
    self.discoveryResult = [DeviceAddresses defaultInstance];
  }
  return self;
}
static CommandResponse* defaultCommandResponseInstance = nil;
+ (void) initialize {
  if (self == [CommandResponse class]) {
    defaultCommandResponseInstance = [[CommandResponse alloc] init];
  }
}
+ (CommandResponse*) defaultInstance {
  return defaultCommandResponseInstance;
}
- (CommandResponse*) defaultInstance {
  return defaultCommandResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasDeviceId) {
    return NO;
  }
  if (!self.hasCommandId) {
    return NO;
  }
  if (self.hasSearchResults) {
    if (!self.searchResults.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDeviceId) {
    [output writeFixed64:1 value:self.deviceId];
  }
  if (self.hasCommandId) {
    [output writeFixed64:2 value:self.commandId];
  }
  if (self.hasSuccess) {
    [output writeBool:3 value:self.success];
  }
  if (self.hasErrorMessage) {
    [output writeString:4 value:self.errorMessage];
  }
  if (self.hasSearchResults) {
    [output writeMessage:10 value:self.searchResults];
  }
  if (self.hasDiscoveryResult) {
    [output writeMessage:11 value:self.discoveryResult];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasDeviceId) {
    size += computeFixed64Size(1, self.deviceId);
  }
  if (self.hasCommandId) {
    size += computeFixed64Size(2, self.commandId);
  }
  if (self.hasSuccess) {
    size += computeBoolSize(3, self.success);
  }
  if (self.hasErrorMessage) {
    size += computeStringSize(4, self.errorMessage);
  }
  if (self.hasSearchResults) {
    size += computeMessageSize(10, self.searchResults);
  }
  if (self.hasDiscoveryResult) {
    size += computeMessageSize(11, self.discoveryResult);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CommandResponse*) parseFromData:(NSData*) data {
  return (CommandResponse*)[[[CommandResponse builder] mergeFromData:data] build];
}
+ (CommandResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommandResponse*)[[[CommandResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CommandResponse*) parseFromInputStream:(NSInputStream*) input {
  return (CommandResponse*)[[[CommandResponse builder] mergeFromInputStream:input] build];
}
+ (CommandResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommandResponse*)[[[CommandResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CommandResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CommandResponse*)[[[CommandResponse builder] mergeFromCodedInputStream:input] build];
}
+ (CommandResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommandResponse*)[[[CommandResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CommandResponse_Builder*) builder {
  return [[[CommandResponse_Builder alloc] init] autorelease];
}
+ (CommandResponse_Builder*) builderWithPrototype:(CommandResponse*) prototype {
  return [[CommandResponse builder] mergeFrom:prototype];
}
- (CommandResponse_Builder*) builder {
  return [CommandResponse builder];
}
@end

@interface CommandResponse_SearchResults ()
@property (retain) NSMutableArray* mutableContactsList;
@end

@implementation CommandResponse_SearchResults

@synthesize mutableContactsList;
- (void) dealloc {
  self.mutableContactsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static CommandResponse_SearchResults* defaultCommandResponse_SearchResultsInstance = nil;
+ (void) initialize {
  if (self == [CommandResponse_SearchResults class]) {
    defaultCommandResponse_SearchResultsInstance = [[CommandResponse_SearchResults alloc] init];
  }
}
+ (CommandResponse_SearchResults*) defaultInstance {
  return defaultCommandResponse_SearchResultsInstance;
}
- (CommandResponse_SearchResults*) defaultInstance {
  return defaultCommandResponse_SearchResultsInstance;
}
- (NSArray*) contactsList {
  return mutableContactsList;
}
- (Contact*) contactsAtIndex:(int32_t) index {
  id value = [mutableContactsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (Contact* element in self.contactsList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (Contact* element in self.contactsList) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (Contact* element in self.contactsList) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CommandResponse_SearchResults*) parseFromData:(NSData*) data {
  return (CommandResponse_SearchResults*)[[[CommandResponse_SearchResults builder] mergeFromData:data] build];
}
+ (CommandResponse_SearchResults*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommandResponse_SearchResults*)[[[CommandResponse_SearchResults builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CommandResponse_SearchResults*) parseFromInputStream:(NSInputStream*) input {
  return (CommandResponse_SearchResults*)[[[CommandResponse_SearchResults builder] mergeFromInputStream:input] build];
}
+ (CommandResponse_SearchResults*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommandResponse_SearchResults*)[[[CommandResponse_SearchResults builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CommandResponse_SearchResults*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CommandResponse_SearchResults*)[[[CommandResponse_SearchResults builder] mergeFromCodedInputStream:input] build];
}
+ (CommandResponse_SearchResults*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommandResponse_SearchResults*)[[[CommandResponse_SearchResults builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CommandResponse_SearchResults_Builder*) builder {
  return [[[CommandResponse_SearchResults_Builder alloc] init] autorelease];
}
+ (CommandResponse_SearchResults_Builder*) builderWithPrototype:(CommandResponse_SearchResults*) prototype {
  return [[CommandResponse_SearchResults builder] mergeFrom:prototype];
}
- (CommandResponse_SearchResults_Builder*) builder {
  return [CommandResponse_SearchResults builder];
}
@end

@interface CommandResponse_SearchResults_Builder()
@property (retain) CommandResponse_SearchResults* result;
@end

@implementation CommandResponse_SearchResults_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CommandResponse_SearchResults alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CommandResponse_SearchResults_Builder*) clear {
  self.result = [[[CommandResponse_SearchResults alloc] init] autorelease];
  return self;
}
- (CommandResponse_SearchResults_Builder*) clone {
  return [CommandResponse_SearchResults builderWithPrototype:result];
}
- (CommandResponse_SearchResults*) defaultInstance {
  return [CommandResponse_SearchResults defaultInstance];
}
- (CommandResponse_SearchResults*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CommandResponse_SearchResults*) buildPartial {
  CommandResponse_SearchResults* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CommandResponse_SearchResults_Builder*) mergeFrom:(CommandResponse_SearchResults*) other {
  if (other == [CommandResponse_SearchResults defaultInstance]) {
    return self;
  }
  if (other.mutableContactsList.count > 0) {
    if (result.mutableContactsList == nil) {
      result.mutableContactsList = [NSMutableArray array];
    }
    [result.mutableContactsList addObjectsFromArray:other.mutableContactsList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CommandResponse_SearchResults_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CommandResponse_SearchResults_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Contact_Builder* subBuilder = [Contact builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addContacts:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) contactsList {
  if (result.mutableContactsList == nil) { return [NSArray array]; }
  return result.mutableContactsList;
}
- (Contact*) contactsAtIndex:(int32_t) index {
  return [result contactsAtIndex:index];
}
- (CommandResponse_SearchResults_Builder*) replaceContactsAtIndex:(int32_t) index with:(Contact*) value {
  [result.mutableContactsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (CommandResponse_SearchResults_Builder*) addAllContacts:(NSArray*) values {
  if (result.mutableContactsList == nil) {
    result.mutableContactsList = [NSMutableArray array];
  }
  [result.mutableContactsList addObjectsFromArray:values];
  return self;
}
- (CommandResponse_SearchResults_Builder*) clearContactsList {
  result.mutableContactsList = nil;
  return self;
}
- (CommandResponse_SearchResults_Builder*) addContacts:(Contact*) value {
  if (result.mutableContactsList == nil) {
    result.mutableContactsList = [NSMutableArray array];
  }
  [result.mutableContactsList addObject:value];
  return self;
}
@end

@interface CommandResponse_Builder()
@property (retain) CommandResponse* result;
@end

@implementation CommandResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CommandResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CommandResponse_Builder*) clear {
  self.result = [[[CommandResponse alloc] init] autorelease];
  return self;
}
- (CommandResponse_Builder*) clone {
  return [CommandResponse builderWithPrototype:result];
}
- (CommandResponse*) defaultInstance {
  return [CommandResponse defaultInstance];
}
- (CommandResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CommandResponse*) buildPartial {
  CommandResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CommandResponse_Builder*) mergeFrom:(CommandResponse*) other {
  if (other == [CommandResponse defaultInstance]) {
    return self;
  }
  if (other.hasDeviceId) {
    [self setDeviceId:other.deviceId];
  }
  if (other.hasCommandId) {
    [self setCommandId:other.commandId];
  }
  if (other.hasSuccess) {
    [self setSuccess:other.success];
  }
  if (other.hasErrorMessage) {
    [self setErrorMessage:other.errorMessage];
  }
  if (other.hasSearchResults) {
    [self mergeSearchResults:other.searchResults];
  }
  if (other.hasDiscoveryResult) {
    [self mergeDiscoveryResult:other.discoveryResult];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CommandResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CommandResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 9: {
        [self setDeviceId:[input readFixed64]];
        break;
      }
      case 17: {
        [self setCommandId:[input readFixed64]];
        break;
      }
      case 24: {
        [self setSuccess:[input readBool]];
        break;
      }
      case 34: {
        [self setErrorMessage:[input readString]];
        break;
      }
      case 82: {
        CommandResponse_SearchResults_Builder* subBuilder = [CommandResponse_SearchResults builder];
        if (self.hasSearchResults) {
          [subBuilder mergeFrom:self.searchResults];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSearchResults:[subBuilder buildPartial]];
        break;
      }
      case 90: {
        DeviceAddresses_Builder* subBuilder = [DeviceAddresses builder];
        if (self.hasDiscoveryResult) {
          [subBuilder mergeFrom:self.discoveryResult];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setDiscoveryResult:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasDeviceId {
  return result.hasDeviceId;
}
- (int64_t) deviceId {
  return result.deviceId;
}
- (CommandResponse_Builder*) setDeviceId:(int64_t) value {
  result.hasDeviceId = YES;
  result.deviceId = value;
  return self;
}
- (CommandResponse_Builder*) clearDeviceId {
  result.hasDeviceId = NO;
  result.deviceId = 0L;
  return self;
}
- (BOOL) hasCommandId {
  return result.hasCommandId;
}
- (int64_t) commandId {
  return result.commandId;
}
- (CommandResponse_Builder*) setCommandId:(int64_t) value {
  result.hasCommandId = YES;
  result.commandId = value;
  return self;
}
- (CommandResponse_Builder*) clearCommandId {
  result.hasCommandId = NO;
  result.commandId = 0L;
  return self;
}
- (BOOL) hasSuccess {
  return result.hasSuccess;
}
- (BOOL) success {
  return result.success;
}
- (CommandResponse_Builder*) setSuccess:(BOOL) value {
  result.hasSuccess = YES;
  result.success = value;
  return self;
}
- (CommandResponse_Builder*) clearSuccess {
  result.hasSuccess = NO;
  result.success = NO;
  return self;
}
- (BOOL) hasErrorMessage {
  return result.hasErrorMessage;
}
- (NSString*) errorMessage {
  return result.errorMessage;
}
- (CommandResponse_Builder*) setErrorMessage:(NSString*) value {
  result.hasErrorMessage = YES;
  result.errorMessage = value;
  return self;
}
- (CommandResponse_Builder*) clearErrorMessage {
  result.hasErrorMessage = NO;
  result.errorMessage = @"";
  return self;
}
- (BOOL) hasSearchResults {
  return result.hasSearchResults;
}
- (CommandResponse_SearchResults*) searchResults {
  return result.searchResults;
}
- (CommandResponse_Builder*) setSearchResults:(CommandResponse_SearchResults*) value {
  result.hasSearchResults = YES;
  result.searchResults = value;
  return self;
}
- (CommandResponse_Builder*) setSearchResultsBuilder:(CommandResponse_SearchResults_Builder*) builderForValue {
  return [self setSearchResults:[builderForValue build]];
}
- (CommandResponse_Builder*) mergeSearchResults:(CommandResponse_SearchResults*) value {
  if (result.hasSearchResults &&
      result.searchResults != [CommandResponse_SearchResults defaultInstance]) {
    result.searchResults =
      [[[CommandResponse_SearchResults builderWithPrototype:result.searchResults] mergeFrom:value] buildPartial];
  } else {
    result.searchResults = value;
  }
  result.hasSearchResults = YES;
  return self;
}
- (CommandResponse_Builder*) clearSearchResults {
  result.hasSearchResults = NO;
  result.searchResults = [CommandResponse_SearchResults defaultInstance];
  return self;
}
- (BOOL) hasDiscoveryResult {
  return result.hasDiscoveryResult;
}
- (DeviceAddresses*) discoveryResult {
  return result.discoveryResult;
}
- (CommandResponse_Builder*) setDiscoveryResult:(DeviceAddresses*) value {
  result.hasDiscoveryResult = YES;
  result.discoveryResult = value;
  return self;
}
- (CommandResponse_Builder*) setDiscoveryResultBuilder:(DeviceAddresses_Builder*) builderForValue {
  return [self setDiscoveryResult:[builderForValue build]];
}
- (CommandResponse_Builder*) mergeDiscoveryResult:(DeviceAddresses*) value {
  if (result.hasDiscoveryResult &&
      result.discoveryResult != [DeviceAddresses defaultInstance]) {
    result.discoveryResult =
      [[[DeviceAddresses builderWithPrototype:result.discoveryResult] mergeFrom:value] buildPartial];
  } else {
    result.discoveryResult = value;
  }
  result.hasDiscoveryResult = YES;
  return self;
}
- (CommandResponse_Builder*) clearDiscoveryResult {
  result.hasDiscoveryResult = NO;
  result.discoveryResult = [DeviceAddresses defaultInstance];
  return self;
}
@end

@interface CommandDiscoveryRequest ()
@property int64_t deviceId;
@end

@implementation CommandDiscoveryRequest

- (BOOL) hasDeviceId {
  return !!hasDeviceId_;
}
- (void) setHasDeviceId:(BOOL) value {
  hasDeviceId_ = !!value;
}
@synthesize deviceId;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.deviceId = 0L;
  }
  return self;
}
static CommandDiscoveryRequest* defaultCommandDiscoveryRequestInstance = nil;
+ (void) initialize {
  if (self == [CommandDiscoveryRequest class]) {
    defaultCommandDiscoveryRequestInstance = [[CommandDiscoveryRequest alloc] init];
  }
}
+ (CommandDiscoveryRequest*) defaultInstance {
  return defaultCommandDiscoveryRequestInstance;
}
- (CommandDiscoveryRequest*) defaultInstance {
  return defaultCommandDiscoveryRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasDeviceId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDeviceId) {
    [output writeFixed64:1 value:self.deviceId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasDeviceId) {
    size += computeFixed64Size(1, self.deviceId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CommandDiscoveryRequest*) parseFromData:(NSData*) data {
  return (CommandDiscoveryRequest*)[[[CommandDiscoveryRequest builder] mergeFromData:data] build];
}
+ (CommandDiscoveryRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommandDiscoveryRequest*)[[[CommandDiscoveryRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CommandDiscoveryRequest*) parseFromInputStream:(NSInputStream*) input {
  return (CommandDiscoveryRequest*)[[[CommandDiscoveryRequest builder] mergeFromInputStream:input] build];
}
+ (CommandDiscoveryRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommandDiscoveryRequest*)[[[CommandDiscoveryRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CommandDiscoveryRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CommandDiscoveryRequest*)[[[CommandDiscoveryRequest builder] mergeFromCodedInputStream:input] build];
}
+ (CommandDiscoveryRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommandDiscoveryRequest*)[[[CommandDiscoveryRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CommandDiscoveryRequest_Builder*) builder {
  return [[[CommandDiscoveryRequest_Builder alloc] init] autorelease];
}
+ (CommandDiscoveryRequest_Builder*) builderWithPrototype:(CommandDiscoveryRequest*) prototype {
  return [[CommandDiscoveryRequest builder] mergeFrom:prototype];
}
- (CommandDiscoveryRequest_Builder*) builder {
  return [CommandDiscoveryRequest builder];
}
@end

@interface CommandDiscoveryRequest_Builder()
@property (retain) CommandDiscoveryRequest* result;
@end

@implementation CommandDiscoveryRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CommandDiscoveryRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CommandDiscoveryRequest_Builder*) clear {
  self.result = [[[CommandDiscoveryRequest alloc] init] autorelease];
  return self;
}
- (CommandDiscoveryRequest_Builder*) clone {
  return [CommandDiscoveryRequest builderWithPrototype:result];
}
- (CommandDiscoveryRequest*) defaultInstance {
  return [CommandDiscoveryRequest defaultInstance];
}
- (CommandDiscoveryRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CommandDiscoveryRequest*) buildPartial {
  CommandDiscoveryRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CommandDiscoveryRequest_Builder*) mergeFrom:(CommandDiscoveryRequest*) other {
  if (other == [CommandDiscoveryRequest defaultInstance]) {
    return self;
  }
  if (other.hasDeviceId) {
    [self setDeviceId:other.deviceId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CommandDiscoveryRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CommandDiscoveryRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 9: {
        [self setDeviceId:[input readFixed64]];
        break;
      }
    }
  }
}
- (BOOL) hasDeviceId {
  return result.hasDeviceId;
}
- (int64_t) deviceId {
  return result.deviceId;
}
- (CommandDiscoveryRequest_Builder*) setDeviceId:(int64_t) value {
  result.hasDeviceId = YES;
  result.deviceId = value;
  return self;
}
- (CommandDiscoveryRequest_Builder*) clearDeviceId {
  result.hasDeviceId = NO;
  result.deviceId = 0L;
  return self;
}
@end

@interface CommandDiscoveryReply ()
@property int64_t deviceId;
@property (retain) DeviceAddresses* addresses;
@end

@implementation CommandDiscoveryReply

- (BOOL) hasDeviceId {
  return !!hasDeviceId_;
}
- (void) setHasDeviceId:(BOOL) value {
  hasDeviceId_ = !!value;
}
@synthesize deviceId;
- (BOOL) hasAddresses {
  return !!hasAddresses_;
}
- (void) setHasAddresses:(BOOL) value {
  hasAddresses_ = !!value;
}
@synthesize addresses;
- (void) dealloc {
  self.addresses = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.deviceId = 0L;
    self.addresses = [DeviceAddresses defaultInstance];
  }
  return self;
}
static CommandDiscoveryReply* defaultCommandDiscoveryReplyInstance = nil;
+ (void) initialize {
  if (self == [CommandDiscoveryReply class]) {
    defaultCommandDiscoveryReplyInstance = [[CommandDiscoveryReply alloc] init];
  }
}
+ (CommandDiscoveryReply*) defaultInstance {
  return defaultCommandDiscoveryReplyInstance;
}
- (CommandDiscoveryReply*) defaultInstance {
  return defaultCommandDiscoveryReplyInstance;
}
- (BOOL) isInitialized {
  if (!self.hasDeviceId) {
    return NO;
  }
  if (!self.hasAddresses) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDeviceId) {
    [output writeFixed64:1 value:self.deviceId];
  }
  if (self.hasAddresses) {
    [output writeMessage:2 value:self.addresses];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasDeviceId) {
    size += computeFixed64Size(1, self.deviceId);
  }
  if (self.hasAddresses) {
    size += computeMessageSize(2, self.addresses);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CommandDiscoveryReply*) parseFromData:(NSData*) data {
  return (CommandDiscoveryReply*)[[[CommandDiscoveryReply builder] mergeFromData:data] build];
}
+ (CommandDiscoveryReply*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommandDiscoveryReply*)[[[CommandDiscoveryReply builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CommandDiscoveryReply*) parseFromInputStream:(NSInputStream*) input {
  return (CommandDiscoveryReply*)[[[CommandDiscoveryReply builder] mergeFromInputStream:input] build];
}
+ (CommandDiscoveryReply*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommandDiscoveryReply*)[[[CommandDiscoveryReply builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CommandDiscoveryReply*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CommandDiscoveryReply*)[[[CommandDiscoveryReply builder] mergeFromCodedInputStream:input] build];
}
+ (CommandDiscoveryReply*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommandDiscoveryReply*)[[[CommandDiscoveryReply builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CommandDiscoveryReply_Builder*) builder {
  return [[[CommandDiscoveryReply_Builder alloc] init] autorelease];
}
+ (CommandDiscoveryReply_Builder*) builderWithPrototype:(CommandDiscoveryReply*) prototype {
  return [[CommandDiscoveryReply builder] mergeFrom:prototype];
}
- (CommandDiscoveryReply_Builder*) builder {
  return [CommandDiscoveryReply builder];
}
@end

@interface CommandDiscoveryReply_Builder()
@property (retain) CommandDiscoveryReply* result;
@end

@implementation CommandDiscoveryReply_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CommandDiscoveryReply alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CommandDiscoveryReply_Builder*) clear {
  self.result = [[[CommandDiscoveryReply alloc] init] autorelease];
  return self;
}
- (CommandDiscoveryReply_Builder*) clone {
  return [CommandDiscoveryReply builderWithPrototype:result];
}
- (CommandDiscoveryReply*) defaultInstance {
  return [CommandDiscoveryReply defaultInstance];
}
- (CommandDiscoveryReply*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CommandDiscoveryReply*) buildPartial {
  CommandDiscoveryReply* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CommandDiscoveryReply_Builder*) mergeFrom:(CommandDiscoveryReply*) other {
  if (other == [CommandDiscoveryReply defaultInstance]) {
    return self;
  }
  if (other.hasDeviceId) {
    [self setDeviceId:other.deviceId];
  }
  if (other.hasAddresses) {
    [self mergeAddresses:other.addresses];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CommandDiscoveryReply_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CommandDiscoveryReply_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 9: {
        [self setDeviceId:[input readFixed64]];
        break;
      }
      case 18: {
        DeviceAddresses_Builder* subBuilder = [DeviceAddresses builder];
        if (self.hasAddresses) {
          [subBuilder mergeFrom:self.addresses];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setAddresses:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasDeviceId {
  return result.hasDeviceId;
}
- (int64_t) deviceId {
  return result.deviceId;
}
- (CommandDiscoveryReply_Builder*) setDeviceId:(int64_t) value {
  result.hasDeviceId = YES;
  result.deviceId = value;
  return self;
}
- (CommandDiscoveryReply_Builder*) clearDeviceId {
  result.hasDeviceId = NO;
  result.deviceId = 0L;
  return self;
}
- (BOOL) hasAddresses {
  return result.hasAddresses;
}
- (DeviceAddresses*) addresses {
  return result.addresses;
}
- (CommandDiscoveryReply_Builder*) setAddresses:(DeviceAddresses*) value {
  result.hasAddresses = YES;
  result.addresses = value;
  return self;
}
- (CommandDiscoveryReply_Builder*) setAddressesBuilder:(DeviceAddresses_Builder*) builderForValue {
  return [self setAddresses:[builderForValue build]];
}
- (CommandDiscoveryReply_Builder*) mergeAddresses:(DeviceAddresses*) value {
  if (result.hasAddresses &&
      result.addresses != [DeviceAddresses defaultInstance]) {
    result.addresses =
      [[[DeviceAddresses builderWithPrototype:result.addresses] mergeFrom:value] buildPartial];
  } else {
    result.addresses = value;
  }
  result.hasAddresses = YES;
  return self;
}
- (CommandDiscoveryReply_Builder*) clearAddresses {
  result.hasAddresses = NO;
  result.addresses = [DeviceAddresses defaultInstance];
  return self;
}
@end

